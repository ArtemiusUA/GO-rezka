{{template "base" .}}
{{define "title"}}{{.Video.Name}} / {{.Video.Name_orig}}{{end}}
{{define "content"}}
    <h3>{{.Video.Name}} / {{.Video.Name_orig}}</h3>
    {{if not .Video.Video_urls}}
        <div>Error: no video urls are available!!!</div>
    {{end}}
    <video id="video"
           poster="{{.Video.Image_url}}"
           controls style="background:black">
        {{range .VideoUrls}}
            <source label="{{.Quality}}/Mp4url" src="{{.Mp4url}}" type="video/mp4"/>
        {{end}}
        {{range .VideoUrls}}
            <source label="{{.Quality}}/M3u8url" src="{{.M3u8url}}" type="video/mp4"/>
        {{end}}
    </video>
    <div class="video-parts">
        <ul>
            {{range .Parts}}
                <li><a href="#" data-id="{{.Id}}">{{.Name}}</a></li>
            {{end}}
            <li><a href="/videos/{{.Video.Id}}/refresh">&#8635;Reparse</a></li>
        </ul>
    </div>
    <div class="video-description">
        {{.Video.Description}}
    </div>
    <script>
        const parts = {}
        {{range .Parts}}
        parts["{{.Id}}"] = {{.Video_urls}}
        {{end}}
        const video = document.getElementById('video');

        document.querySelectorAll('.video-parts a').forEach(partEl => {
            partEl.addEventListener('click', function (e) {
                e.preventDefault();
                video.pause();
                const part = parts[e.target.dataset.id];
                document.querySelectorAll("source").forEach(el => el.remove());
                part.forEach(el => {
                    const source = document.createElement('source');
                    source.setAttribute("src", el.mp4Url);
                    source.setAttribute("label", el.quality + "/Mp4url");
                    source.setAttribute("type", "video/mp4");
                    video.appendChild(source);
                });
                video.load();
                video.play();
            })
        })
    </script>
{{end}}